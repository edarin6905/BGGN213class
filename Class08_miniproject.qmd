---
title: "Class08_miniproject Emily Darin"
format: pdf
---

```{r}
library(readr)

fna.data <- read_csv("WisconsinCancer.csv")
dim(fna.data)

wisc.df <- data.frame(fna.data, row.names=1)

```

```{r}

wisc.data <- wisc.df[,-1]
diagnosis<-as.data.frame(wisc.df$diagnosis)
```


>Q1. How many observations are in this dataset?

569 

```{r}
dim(wisc.data)
dim(diagnosis)
```

>Q2. How many of the observations have a malignant diagnosis?

```{r}
table(diagnosis)
```


>Q3. How many variables/features in the data are suffixed with _mean?

10

```{r}
length(grep("_mean",colnames(wisc.df), value=TRUE))

diagnosis <- as.factor(wisc.df$diagnosis)


```


```{r}

wisc.data<-wisc.df[-1]

apply(wisc.data,2,sd)
```


#Principal component analysis for cancer dataset 


```{r}
wisc.pr<-prcomp(wisc.data,scale=TRUE)
summary(wisc.pr)
```

We want to scale the analysis to make our PCA standard deviation more accurate. 

>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44%


>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3

>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

7

```{r}
biplot(wisc.pr)
```
>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

This plot is a mess and hard to understand

```{r}
pc <-as.data.frame(wisc.pr$x)




library(ggplot2)
library(ggpubr)
library(ggprism)

ggplot(data=pc, aes(PC1,PC2,col=diagnosis))+
  geom_point(alpha=0.8)+
  xlab("Principal Component 1")+
  ylab("Principal Component 2")+
  ylim(-17,17)+
  xlim(-17,17)+
  scale_color_manual(name="Diagnosis",labels=c("Benign", "Malignant"), values=c("black", "white"))+
  theme_dark()+
  theme(plot.background = element_rect(fill = "grey"),panel.background = element_rect(fill = "grey", size = 2, linetype = "solid"),
        legend.background = element_rect(colour = NA))




```
>Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

The variation is less between the two plots, and the data is closer together. 

```{r}

ggplot(data=pc, aes(PC1,PC3,col=diagnosis))+
  geom_point(alpha=0.8)+
  xlab("Principal Component 1")+
  ylab("Principal Component 3")+
  ylim(-17,17)+
  xlim(-17,17)+
  scale_color_manual(name="Diagnosis",labels=c("Benign", "Malignant"), values=c("black", "white"))+
  theme_dark()+
  theme(plot.background = element_rect(fill = "grey"),panel.background = element_rect(fill = "grey", size = 2, linetype = "solid"),
        legend.background = element_rect(colour = NA))
```
#Variance calculations and barplots 

>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

This shows us how much of the original PC component is coming from the first PC. 

```{r}
# Calculate variance of each component

library(ggplot2)
pr.var <-wisc.pr$sdev^2 
head(pr.var)

pve<-summary(wisc.pr)
pve<-pve$importance[2,]

barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )

```
```{r}
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```
```{r}
# Scale the wisc.data data using the "scale()" function

data.scaled <- scale(wisc.data)

data.dist <- dist(data.scaled)


wisc.hclust <- hclust(data.dist,method="ward.D2")
plot(wisc.hclust)
abline(wisc.hclust, col="red", lty=2)

```

>Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

~18

>Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

I like the ward.D2 method because it gives us the "cleanest" result, and we can distinguish some of the top clustered bars. 

#Combining methods 

Here we will use PCA results as the input to clustering analysis 

```{r}
wisc.pr.hclust<-hclust(dist(wisc.pr$x[,1:3]), method = "ward.D2")
plot(wisc.pr.hclust)
```



```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

>Q13. How well does the newly created model with four clusters separate out the two diagnoses?

You can tell that the malignant data is more widespread than the benign data and the clustering does not do a great hob. 

>Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

The clustering does not do a great job separating diagnosis. 


```{r}

table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```
```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```
```{r}
plot(wisc.pr$x[,1:2], col=g)
```
```{r}
library(rgl)
plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)
```

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
```
```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

>Q16. Which of these new patients should we prioritize for follow up based on your results?

Patient 1 because their results may mean they have a false negative and that they actually have cancer. 

